#!/usr/bin/env node
/*jshint esversion:6 */
var concatLicenses = require('../lib/index');

var args = require('../lib/args').parse();
var mkdirp = require('mkdirp');
var path = require('path');
var chalk = require('chalk');
var fs = require('fs');

if (args.help) {
    console.log('concat-licenses@' + require('../package.json').version);
    var usage = [
        '',
        '   --production only show production dependencies.',
        '   --development only show development dependencies.',
        '   --unknown report guessed licenses as unknown licenses.',
        '   --onlyunknown only list packages with unknown or guessed licenses.',
        '   --search [filepath] look in the following npm project directory.',
        '   --out [filepath] write the data to a specific file.',
        '   --exclude [list] exclude modules which licenses are in the comma-separated list from the output',
        '',
        '   --version The current version',
        '   --help  The text you are reading right now :)',
        ''
    ];
    console.log(usage.join('\n'), '\n');
    process.exit(0);
}

if (args.version) {
    console.log(require('../package.json').version);
    process.exit(1);
}

concatLicenses.concat(args, function(err, output) {
    let formattedOutput = output;
    //Remove the color tags
    formattedOutput = chalk.stripColor(formattedOutput);

    if (err) {
        console.error('Found error');
        throw err;
    }

    if (args.out) {
        var dir = path.dirname(args.out);
        mkdirp.sync(dir);        
        fs.writeFileSync(args.out, formattedOutput, 'utf8');
    }
    else {
        process.stdout.write(formattedOutput);
    }
});
